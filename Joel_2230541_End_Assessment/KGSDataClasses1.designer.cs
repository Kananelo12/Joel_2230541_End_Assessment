#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Joel_2230541_End_Assessment
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KaraboGS_2230541")]
	public partial class KGSDataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblGuardian(tblGuardian instance);
    partial void UpdatetblGuardian(tblGuardian instance);
    partial void DeletetblGuardian(tblGuardian instance);
    partial void InserttblPayment(tblPayment instance);
    partial void UpdatetblPayment(tblPayment instance);
    partial void DeletetblPayment(tblPayment instance);
    partial void InserttblQualification(tblQualification instance);
    partial void UpdatetblQualification(tblQualification instance);
    partial void DeletetblQualification(tblQualification instance);
    partial void InserttblResult(tblResult instance);
    partial void UpdatetblResult(tblResult instance);
    partial void DeletetblResult(tblResult instance);
    partial void InserttblStaff(tblStaff instance);
    partial void UpdatetblStaff(tblStaff instance);
    partial void DeletetblStaff(tblStaff instance);
    partial void InserttblUserLog(tblUserLog instance);
    partial void UpdatetblUserLog(tblUserLog instance);
    partial void DeletetblUserLog(tblUserLog instance);
    partial void InserttblUserRole(tblUserRole instance);
    partial void UpdatetblUserRole(tblUserRole instance);
    partial void DeletetblUserRole(tblUserRole instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblStudent(tblStudent instance);
    partial void UpdatetblStudent(tblStudent instance);
    partial void DeletetblStudent(tblStudent instance);
    partial void InserttblStaffArchive(tblStaffArchive instance);
    partial void UpdatetblStaffArchive(tblStaffArchive instance);
    partial void DeletetblStaffArchive(tblStaffArchive instance);
    partial void InserttblStudentArchive(tblStudentArchive instance);
    partial void UpdatetblStudentArchive(tblStudentArchive instance);
    partial void DeletetblStudentArchive(tblStudentArchive instance);
    #endregion
		
		public KGSDataClasses1DataContext() : 
				base(global::Joel_2230541_End_Assessment.Properties.Settings.Default.KaraboGS_2230541ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KGSDataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KGSDataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KGSDataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KGSDataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblGuardian> tblGuardians
		{
			get
			{
				return this.GetTable<tblGuardian>();
			}
		}
		
		public System.Data.Linq.Table<tblPayment> tblPayments
		{
			get
			{
				return this.GetTable<tblPayment>();
			}
		}
		
		public System.Data.Linq.Table<tblQualification> tblQualifications
		{
			get
			{
				return this.GetTable<tblQualification>();
			}
		}
		
		public System.Data.Linq.Table<tblResult> tblResults
		{
			get
			{
				return this.GetTable<tblResult>();
			}
		}
		
		public System.Data.Linq.Table<tblStaff> tblStaffs
		{
			get
			{
				return this.GetTable<tblStaff>();
			}
		}
		
		public System.Data.Linq.Table<tblUserLog> tblUserLogs
		{
			get
			{
				return this.GetTable<tblUserLog>();
			}
		}
		
		public System.Data.Linq.Table<tblUserRole> tblUserRoles
		{
			get
			{
				return this.GetTable<tblUserRole>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<UserSession> UserSessions
		{
			get
			{
				return this.GetTable<UserSession>();
			}
		}
		
		public System.Data.Linq.Table<tblStudent> tblStudents
		{
			get
			{
				return this.GetTable<tblStudent>();
			}
		}
		
		public System.Data.Linq.Table<tblStaffArchive> tblStaffArchives
		{
			get
			{
				return this.GetTable<tblStaffArchive>();
			}
		}
		
		public System.Data.Linq.Table<tblStudentArchive> tblStudentArchives
		{
			get
			{
				return this.GetTable<tblStudentArchive>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGuardian")]
	public partial class tblGuardian : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GuardianID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _HomePhone;
		
		private string _WorkPhone;
		
		private string _PhysicalAddress;
		
		private EntitySet<tblStudent> _tblStudents;
		
		private EntitySet<tblStudentArchive> _tblStudentArchives;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGuardianIDChanging(int value);
    partial void OnGuardianIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnWorkPhoneChanging(string value);
    partial void OnWorkPhoneChanged();
    partial void OnPhysicalAddressChanging(string value);
    partial void OnPhysicalAddressChanged();
    #endregion
		
		public tblGuardian()
		{
			this._tblStudents = new EntitySet<tblStudent>(new Action<tblStudent>(this.attach_tblStudents), new Action<tblStudent>(this.detach_tblStudents));
			this._tblStudentArchives = new EntitySet<tblStudentArchive>(new Action<tblStudentArchive>(this.attach_tblStudentArchives), new Action<tblStudentArchive>(this.detach_tblStudentArchives));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GuardianID
		{
			get
			{
				return this._GuardianID;
			}
			set
			{
				if ((this._GuardianID != value))
				{
					this.OnGuardianIDChanging(value);
					this.SendPropertyChanging();
					this._GuardianID = value;
					this.SendPropertyChanged("GuardianID");
					this.OnGuardianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkPhone", DbType="VarChar(30)")]
		public string WorkPhone
		{
			get
			{
				return this._WorkPhone;
			}
			set
			{
				if ((this._WorkPhone != value))
				{
					this.OnWorkPhoneChanging(value);
					this.SendPropertyChanging();
					this._WorkPhone = value;
					this.SendPropertyChanged("WorkPhone");
					this.OnWorkPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalAddress", DbType="VarChar(128)")]
		public string PhysicalAddress
		{
			get
			{
				return this._PhysicalAddress;
			}
			set
			{
				if ((this._PhysicalAddress != value))
				{
					this.OnPhysicalAddressChanging(value);
					this.SendPropertyChanging();
					this._PhysicalAddress = value;
					this.SendPropertyChanged("PhysicalAddress");
					this.OnPhysicalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGuardian_tblStudent", Storage="_tblStudents", ThisKey="GuardianID", OtherKey="GuardianID")]
		public EntitySet<tblStudent> tblStudents
		{
			get
			{
				return this._tblStudents;
			}
			set
			{
				this._tblStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGuardian_tblStudentArchive", Storage="_tblStudentArchives", ThisKey="GuardianID", OtherKey="GuardianID")]
		public EntitySet<tblStudentArchive> tblStudentArchives
		{
			get
			{
				return this._tblStudentArchives;
			}
			set
			{
				this._tblStudentArchives.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblStudents(tblStudent entity)
		{
			this.SendPropertyChanging();
			entity.tblGuardian = this;
		}
		
		private void detach_tblStudents(tblStudent entity)
		{
			this.SendPropertyChanging();
			entity.tblGuardian = null;
		}
		
		private void attach_tblStudentArchives(tblStudentArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblGuardian = this;
		}
		
		private void detach_tblStudentArchives(tblStudentArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblGuardian = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPayment")]
	public partial class tblPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PaymentID;
		
		private int _StudentID;
		
		private System.Nullable<decimal> _AmountPaid;
		
		private System.Nullable<decimal> _OutstandingAmount;
		
		private System.DateTime _PaymentDate;
		
		private int _CashierID;
		
		private string _ReceiptNO;
		
		private EntityRef<tblStaff> _tblStaff;
		
		private EntityRef<tblStudent> _tblStudent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPaymentIDChanging(int value);
    partial void OnPaymentIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnAmountPaidChanging(System.Nullable<decimal> value);
    partial void OnAmountPaidChanged();
    partial void OnOutstandingAmountChanging(System.Nullable<decimal> value);
    partial void OnOutstandingAmountChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnCashierIDChanging(int value);
    partial void OnCashierIDChanged();
    partial void OnReceiptNOChanging(string value);
    partial void OnReceiptNOChanged();
    #endregion
		
		public tblPayment()
		{
			this._tblStaff = default(EntityRef<tblStaff>);
			this._tblStudent = default(EntityRef<tblStudent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PaymentID
		{
			get
			{
				return this._PaymentID;
			}
			set
			{
				if ((this._PaymentID != value))
				{
					this.OnPaymentIDChanging(value);
					this.SendPropertyChanging();
					this._PaymentID = value;
					this.SendPropertyChanged("PaymentID");
					this.OnPaymentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._tblStudent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AmountPaid", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> AmountPaid
		{
			get
			{
				return this._AmountPaid;
			}
			set
			{
				if ((this._AmountPaid != value))
				{
					this.OnAmountPaidChanging(value);
					this.SendPropertyChanging();
					this._AmountPaid = value;
					this.SendPropertyChanged("AmountPaid");
					this.OnAmountPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutstandingAmount", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> OutstandingAmount
		{
			get
			{
				return this._OutstandingAmount;
			}
			set
			{
				if ((this._OutstandingAmount != value))
				{
					this.OnOutstandingAmountChanging(value);
					this.SendPropertyChanging();
					this._OutstandingAmount = value;
					this.SendPropertyChanged("OutstandingAmount");
					this.OnOutstandingAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="Date NOT NULL")]
		public System.DateTime PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashierID", DbType="Int NOT NULL")]
		public int CashierID
		{
			get
			{
				return this._CashierID;
			}
			set
			{
				if ((this._CashierID != value))
				{
					if (this._tblStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCashierIDChanging(value);
					this.SendPropertyChanging();
					this._CashierID = value;
					this.SendPropertyChanged("CashierID");
					this.OnCashierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptNO", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string ReceiptNO
		{
			get
			{
				return this._ReceiptNO;
			}
			set
			{
				if ((this._ReceiptNO != value))
				{
					this.OnReceiptNOChanging(value);
					this.SendPropertyChanging();
					this._ReceiptNO = value;
					this.SendPropertyChanged("ReceiptNO");
					this.OnReceiptNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblPayment", Storage="_tblStaff", ThisKey="CashierID", OtherKey="StaffID", IsForeignKey=true)]
		public tblStaff tblStaff
		{
			get
			{
				return this._tblStaff.Entity;
			}
			set
			{
				tblStaff previousValue = this._tblStaff.Entity;
				if (((previousValue != value) 
							|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaff.Entity = null;
						previousValue.tblPayments.Remove(this);
					}
					this._tblStaff.Entity = value;
					if ((value != null))
					{
						value.tblPayments.Add(this);
						this._CashierID = value.StaffID;
					}
					else
					{
						this._CashierID = default(int);
					}
					this.SendPropertyChanged("tblStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblPayment", Storage="_tblStudent", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public tblStudent tblStudent
		{
			get
			{
				return this._tblStudent.Entity;
			}
			set
			{
				tblStudent previousValue = this._tblStudent.Entity;
				if (((previousValue != value) 
							|| (this._tblStudent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStudent.Entity = null;
						previousValue.tblPayments.Remove(this);
					}
					this._tblStudent.Entity = value;
					if ((value != null))
					{
						value.tblPayments.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("tblStudent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblQualification")]
	public partial class tblQualification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _QualificationID;
		
		private string _QualificationName;
		
		private EntitySet<tblStaff> _tblStaffs;
		
		private EntitySet<tblStaffArchive> _tblStaffArchives;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnQualificationIDChanging(string value);
    partial void OnQualificationIDChanged();
    partial void OnQualificationNameChanging(string value);
    partial void OnQualificationNameChanged();
    #endregion
		
		public tblQualification()
		{
			this._tblStaffs = new EntitySet<tblStaff>(new Action<tblStaff>(this.attach_tblStaffs), new Action<tblStaff>(this.detach_tblStaffs));
			this._tblStaffArchives = new EntitySet<tblStaffArchive>(new Action<tblStaffArchive>(this.attach_tblStaffArchives), new Action<tblStaffArchive>(this.detach_tblStaffArchives));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationID", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string QualificationID
		{
			get
			{
				return this._QualificationID;
			}
			set
			{
				if ((this._QualificationID != value))
				{
					this.OnQualificationIDChanging(value);
					this.SendPropertyChanging();
					this._QualificationID = value;
					this.SendPropertyChanged("QualificationID");
					this.OnQualificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationName", DbType="VarChar(60)")]
		public string QualificationName
		{
			get
			{
				return this._QualificationName;
			}
			set
			{
				if ((this._QualificationName != value))
				{
					this.OnQualificationNameChanging(value);
					this.SendPropertyChanging();
					this._QualificationName = value;
					this.SendPropertyChanged("QualificationName");
					this.OnQualificationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQualification_tblStaff", Storage="_tblStaffs", ThisKey="QualificationID", OtherKey="QualificationID")]
		public EntitySet<tblStaff> tblStaffs
		{
			get
			{
				return this._tblStaffs;
			}
			set
			{
				this._tblStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQualification_tblStaffArchive", Storage="_tblStaffArchives", ThisKey="QualificationID", OtherKey="QualificationID")]
		public EntitySet<tblStaffArchive> tblStaffArchives
		{
			get
			{
				return this._tblStaffArchives;
			}
			set
			{
				this._tblStaffArchives.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblStaffs(tblStaff entity)
		{
			this.SendPropertyChanging();
			entity.tblQualification = this;
		}
		
		private void detach_tblStaffs(tblStaff entity)
		{
			this.SendPropertyChanging();
			entity.tblQualification = null;
		}
		
		private void attach_tblStaffArchives(tblStaffArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblQualification = this;
		}
		
		private void detach_tblStaffArchives(tblStaffArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblQualification = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblResult")]
	public partial class tblResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ResultID;
		
		private int _StudentID;
		
		private string _Subjects;
		
		private int _Marks;
		
		private string _Symbol;
		
		private string _Term;
		
		private System.Nullable<int> _SchoolYear;
		
		private EntityRef<tblStudent> _tblStudent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResultIDChanging(int value);
    partial void OnResultIDChanged();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnSubjectsChanging(string value);
    partial void OnSubjectsChanged();
    partial void OnMarksChanging(int value);
    partial void OnMarksChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnTermChanging(string value);
    partial void OnTermChanged();
    partial void OnSchoolYearChanging(System.Nullable<int> value);
    partial void OnSchoolYearChanged();
    #endregion
		
		public tblResult()
		{
			this._tblStudent = default(EntityRef<tblStudent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResultID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ResultID
		{
			get
			{
				return this._ResultID;
			}
			set
			{
				if ((this._ResultID != value))
				{
					this.OnResultIDChanging(value);
					this.SendPropertyChanging();
					this._ResultID = value;
					this.SendPropertyChanged("ResultID");
					this.OnResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int NOT NULL")]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._tblStudent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subjects", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string Subjects
		{
			get
			{
				return this._Subjects;
			}
			set
			{
				if ((this._Subjects != value))
				{
					this.OnSubjectsChanging(value);
					this.SendPropertyChanging();
					this._Subjects = value;
					this.SendPropertyChanged("Subjects");
					this.OnSubjectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marks", DbType="Int NOT NULL")]
		public int Marks
		{
			get
			{
				return this._Marks;
			}
			set
			{
				if ((this._Marks != value))
				{
					this.OnMarksChanging(value);
					this.SendPropertyChanging();
					this._Marks = value;
					this.SendPropertyChanged("Marks");
					this.OnMarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="VarChar(10)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="VarChar(50)")]
		public string Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolYear", DbType="Int")]
		public System.Nullable<int> SchoolYear
		{
			get
			{
				return this._SchoolYear;
			}
			set
			{
				if ((this._SchoolYear != value))
				{
					this.OnSchoolYearChanging(value);
					this.SendPropertyChanging();
					this._SchoolYear = value;
					this.SendPropertyChanged("SchoolYear");
					this.OnSchoolYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblResult", Storage="_tblStudent", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true)]
		public tblStudent tblStudent
		{
			get
			{
				return this._tblStudent.Entity;
			}
			set
			{
				tblStudent previousValue = this._tblStudent.Entity;
				if (((previousValue != value) 
							|| (this._tblStudent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStudent.Entity = null;
						previousValue.tblResults.Remove(this);
					}
					this._tblStudent.Entity = value;
					if ((value != null))
					{
						value.tblResults.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(int);
					}
					this.SendPropertyChanged("tblStudent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStaff")]
	public partial class tblStaff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _PhysicalAddress;
		
		private string _RoleID;
		
		private string _QualificationID;
		
		private EntitySet<tblPayment> _tblPayments;
		
		private EntitySet<tblUser> _tblUsers;
		
		private EntitySet<tblStudent> _tblStudents;
		
		private EntitySet<tblStudentArchive> _tblStudentArchives;
		
		private EntityRef<tblQualification> _tblQualification;
		
		private EntityRef<tblUserRole> _tblUserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffIDChanging(int value);
    partial void OnStaffIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhysicalAddressChanging(string value);
    partial void OnPhysicalAddressChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnQualificationIDChanging(string value);
    partial void OnQualificationIDChanged();
    #endregion
		
		public tblStaff()
		{
			this._tblPayments = new EntitySet<tblPayment>(new Action<tblPayment>(this.attach_tblPayments), new Action<tblPayment>(this.detach_tblPayments));
			this._tblUsers = new EntitySet<tblUser>(new Action<tblUser>(this.attach_tblUsers), new Action<tblUser>(this.detach_tblUsers));
			this._tblStudents = new EntitySet<tblStudent>(new Action<tblStudent>(this.attach_tblStudents), new Action<tblStudent>(this.detach_tblStudents));
			this._tblStudentArchives = new EntitySet<tblStudentArchive>(new Action<tblStudentArchive>(this.attach_tblStudentArchives), new Action<tblStudentArchive>(this.detach_tblStudentArchives));
			this._tblQualification = default(EntityRef<tblQualification>);
			this._tblUserRole = default(EntityRef<tblUserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(30)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalAddress", DbType="VarChar(128)")]
		public string PhysicalAddress
		{
			get
			{
				return this._PhysicalAddress;
			}
			set
			{
				if ((this._PhysicalAddress != value))
				{
					this.OnPhysicalAddressChanging(value);
					this.SendPropertyChanging();
					this._PhysicalAddress = value;
					this.SendPropertyChanged("PhysicalAddress");
					this.OnPhysicalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Char(3)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._tblUserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationID", DbType="Char(4)")]
		public string QualificationID
		{
			get
			{
				return this._QualificationID;
			}
			set
			{
				if ((this._QualificationID != value))
				{
					if (this._tblQualification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQualificationIDChanging(value);
					this.SendPropertyChanging();
					this._QualificationID = value;
					this.SendPropertyChanged("QualificationID");
					this.OnQualificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblPayment", Storage="_tblPayments", ThisKey="StaffID", OtherKey="CashierID")]
		public EntitySet<tblPayment> tblPayments
		{
			get
			{
				return this._tblPayments;
			}
			set
			{
				this._tblPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblUser", Storage="_tblUsers", ThisKey="StaffID", OtherKey="StaffID")]
		public EntitySet<tblUser> tblUsers
		{
			get
			{
				return this._tblUsers;
			}
			set
			{
				this._tblUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblStudent", Storage="_tblStudents", ThisKey="StaffID", OtherKey="TeacherID")]
		public EntitySet<tblStudent> tblStudents
		{
			get
			{
				return this._tblStudents;
			}
			set
			{
				this._tblStudents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblStudentArchive", Storage="_tblStudentArchives", ThisKey="StaffID", OtherKey="TeacherID")]
		public EntitySet<tblStudentArchive> tblStudentArchives
		{
			get
			{
				return this._tblStudentArchives;
			}
			set
			{
				this._tblStudentArchives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQualification_tblStaff", Storage="_tblQualification", ThisKey="QualificationID", OtherKey="QualificationID", IsForeignKey=true)]
		public tblQualification tblQualification
		{
			get
			{
				return this._tblQualification.Entity;
			}
			set
			{
				tblQualification previousValue = this._tblQualification.Entity;
				if (((previousValue != value) 
							|| (this._tblQualification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQualification.Entity = null;
						previousValue.tblStaffs.Remove(this);
					}
					this._tblQualification.Entity = value;
					if ((value != null))
					{
						value.tblStaffs.Add(this);
						this._QualificationID = value.QualificationID;
					}
					else
					{
						this._QualificationID = default(string);
					}
					this.SendPropertyChanged("tblQualification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUserRole_tblStaff", Storage="_tblUserRole", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public tblUserRole tblUserRole
		{
			get
			{
				return this._tblUserRole.Entity;
			}
			set
			{
				tblUserRole previousValue = this._tblUserRole.Entity;
				if (((previousValue != value) 
							|| (this._tblUserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUserRole.Entity = null;
						previousValue.tblStaffs.Remove(this);
					}
					this._tblUserRole.Entity = value;
					if ((value != null))
					{
						value.tblStaffs.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(string);
					}
					this.SendPropertyChanged("tblUserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPayments(tblPayment entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = this;
		}
		
		private void detach_tblPayments(tblPayment entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = null;
		}
		
		private void attach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = this;
		}
		
		private void detach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = null;
		}
		
		private void attach_tblStudents(tblStudent entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = this;
		}
		
		private void detach_tblStudents(tblStudent entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = null;
		}
		
		private void attach_tblStudentArchives(tblStudentArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = this;
		}
		
		private void detach_tblStudentArchives(tblStudentArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblStaff = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserLogs")]
	public partial class tblUserLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private string _LogCode;
		
		private string _UserName;
		
		private string _Activity;
		
		private System.Nullable<System.DateTime> _LogTimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnLogCodeChanging(string value);
    partial void OnLogCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnActivityChanging(string value);
    partial void OnActivityChanged();
    partial void OnLogTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnLogTimeStampChanged();
    #endregion
		
		public tblUserLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCode", AutoSync=AutoSync.Always, DbType="VarChar(14)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string LogCode
		{
			get
			{
				return this._LogCode;
			}
			set
			{
				if ((this._LogCode != value))
				{
					this.OnLogCodeChanging(value);
					this.SendPropertyChanging();
					this._LogCode = value;
					this.SendPropertyChanged("LogCode");
					this.OnLogCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activity", DbType="VarChar(255)")]
		public string Activity
		{
			get
			{
				return this._Activity;
			}
			set
			{
				if ((this._Activity != value))
				{
					this.OnActivityChanging(value);
					this.SendPropertyChanging();
					this._Activity = value;
					this.SendPropertyChanged("Activity");
					this.OnActivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogTimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogTimeStamp
		{
			get
			{
				return this._LogTimeStamp;
			}
			set
			{
				if ((this._LogTimeStamp != value))
				{
					this.OnLogTimeStampChanging(value);
					this.SendPropertyChanging();
					this._LogTimeStamp = value;
					this.SendPropertyChanged("LogTimeStamp");
					this.OnLogTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserRole")]
	public partial class tblUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleID;
		
		private string _RoleName;
		
		private EntitySet<tblStaff> _tblStaffs;
		
		private EntitySet<tblUser> _tblUsers;
		
		private EntitySet<tblStaffArchive> _tblStaffArchives;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public tblUserRole()
		{
			this._tblStaffs = new EntitySet<tblStaff>(new Action<tblStaff>(this.attach_tblStaffs), new Action<tblStaff>(this.detach_tblStaffs));
			this._tblUsers = new EntitySet<tblUser>(new Action<tblUser>(this.attach_tblUsers), new Action<tblUser>(this.detach_tblUsers));
			this._tblStaffArchives = new EntitySet<tblStaffArchive>(new Action<tblStaffArchive>(this.attach_tblStaffArchives), new Action<tblStaffArchive>(this.detach_tblStaffArchives));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Char(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="VarChar(60)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUserRole_tblStaff", Storage="_tblStaffs", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<tblStaff> tblStaffs
		{
			get
			{
				return this._tblStaffs;
			}
			set
			{
				this._tblStaffs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUserRole_tblUser", Storage="_tblUsers", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<tblUser> tblUsers
		{
			get
			{
				return this._tblUsers;
			}
			set
			{
				this._tblUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUserRole_tblStaffArchive", Storage="_tblStaffArchives", ThisKey="RoleID", OtherKey="RoleID")]
		public EntitySet<tblStaffArchive> tblStaffArchives
		{
			get
			{
				return this._tblStaffArchives;
			}
			set
			{
				this._tblStaffArchives.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblStaffs(tblStaff entity)
		{
			this.SendPropertyChanging();
			entity.tblUserRole = this;
		}
		
		private void detach_tblStaffs(tblStaff entity)
		{
			this.SendPropertyChanging();
			entity.tblUserRole = null;
		}
		
		private void attach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUserRole = this;
		}
		
		private void detach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblUserRole = null;
		}
		
		private void attach_tblStaffArchives(tblStaffArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblUserRole = this;
		}
		
		private void detach_tblStaffArchives(tblStaffArchive entity)
		{
			this.SendPropertyChanging();
			entity.tblUserRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUsers")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _Password;
		
		private string _RoleID;
		
		private System.Nullable<int> _StaffID;
		
		private System.Nullable<int> _StudentID;
		
		private System.Nullable<bool> _isLocked;
		
		private EntityRef<tblUserRole> _tblUserRole;
		
		private EntityRef<tblStaff> _tblStaff;
		
		private EntityRef<tblStudent> _tblStudent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnStaffIDChanging(System.Nullable<int> value);
    partial void OnStaffIDChanged();
    partial void OnStudentIDChanging(System.Nullable<int> value);
    partial void OnStudentIDChanged();
    partial void OnisLockedChanging(System.Nullable<bool> value);
    partial void OnisLockedChanged();
    #endregion
		
		public tblUser()
		{
			this._tblUserRole = default(EntityRef<tblUserRole>);
			this._tblStaff = default(EntityRef<tblStaff>);
			this._tblStudent = default(EntityRef<tblStudent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Char(3)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._tblUserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffID", DbType="Int")]
		public System.Nullable<int> StaffID
		{
			get
			{
				return this._StaffID;
			}
			set
			{
				if ((this._StaffID != value))
				{
					if (this._tblStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffIDChanging(value);
					this.SendPropertyChanging();
					this._StaffID = value;
					this.SendPropertyChanged("StaffID");
					this.OnStaffIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="Int")]
		public System.Nullable<int> StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					if (this._tblStudent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLocked", DbType="Bit")]
		public System.Nullable<bool> isLocked
		{
			get
			{
				return this._isLocked;
			}
			set
			{
				if ((this._isLocked != value))
				{
					this.OnisLockedChanging(value);
					this.SendPropertyChanging();
					this._isLocked = value;
					this.SendPropertyChanged("isLocked");
					this.OnisLockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUserRole_tblUser", Storage="_tblUserRole", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public tblUserRole tblUserRole
		{
			get
			{
				return this._tblUserRole.Entity;
			}
			set
			{
				tblUserRole previousValue = this._tblUserRole.Entity;
				if (((previousValue != value) 
							|| (this._tblUserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUserRole.Entity = null;
						previousValue.tblUsers.Remove(this);
					}
					this._tblUserRole.Entity = value;
					if ((value != null))
					{
						value.tblUsers.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(string);
					}
					this.SendPropertyChanged("tblUserRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblUser", Storage="_tblStaff", ThisKey="StaffID", OtherKey="StaffID", IsForeignKey=true)]
		public tblStaff tblStaff
		{
			get
			{
				return this._tblStaff.Entity;
			}
			set
			{
				tblStaff previousValue = this._tblStaff.Entity;
				if (((previousValue != value) 
							|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaff.Entity = null;
						previousValue.tblUsers.Remove(this);
					}
					this._tblStaff.Entity = value;
					if ((value != null))
					{
						value.tblUsers.Add(this);
						this._StaffID = value.StaffID;
					}
					else
					{
						this._StaffID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStaff");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblUser", Storage="_tblStudent", ThisKey="StudentID", OtherKey="StudentID", IsForeignKey=true, DeleteRule="CASCADE")]
		public tblStudent tblStudent
		{
			get
			{
				return this._tblStudent.Entity;
			}
			set
			{
				tblStudent previousValue = this._tblStudent.Entity;
				if (((previousValue != value) 
							|| (this._tblStudent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStudent.Entity = null;
						previousValue.tblUsers.Remove(this);
					}
					this._tblStudent.Entity = value;
					if ((value != null))
					{
						value.tblUsers.Add(this);
						this._StudentID = value.StudentID;
					}
					else
					{
						this._StudentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStudent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserSession")]
	public partial class UserSession
	{
		
		private string _UserID;
		
		public UserSession()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(128)")]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudent")]
	public partial class tblStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private System.DateTime _DateOfBirth;
		
		private string _Gender;
		
		private string _PhoneNumber;
		
		private string _HomeAddress;
		
		private string _GradeLevel;
		
		private System.Nullable<System.DateTime> _JoinDate;
		
		private System.Nullable<int> _GuardianID;
		
		private System.Nullable<int> _TeacherID;
		
		private EntitySet<tblPayment> _tblPayments;
		
		private EntitySet<tblResult> _tblResults;
		
		private EntitySet<tblUser> _tblUsers;
		
		private EntityRef<tblGuardian> _tblGuardian;
		
		private EntityRef<tblStaff> _tblStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(int value);
    partial void OnStudentIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnGradeLevelChanging(string value);
    partial void OnGradeLevelChanged();
    partial void OnJoinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinDateChanged();
    partial void OnGuardianIDChanging(System.Nullable<int> value);
    partial void OnGuardianIDChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    #endregion
		
		public tblStudent()
		{
			this._tblPayments = new EntitySet<tblPayment>(new Action<tblPayment>(this.attach_tblPayments), new Action<tblPayment>(this.detach_tblPayments));
			this._tblResults = new EntitySet<tblResult>(new Action<tblResult>(this.attach_tblResults), new Action<tblResult>(this.detach_tblResults));
			this._tblUsers = new EntitySet<tblUser>(new Action<tblUser>(this.attach_tblUsers), new Action<tblUser>(this.detach_tblUsers));
			this._tblGuardian = default(EntityRef<tblGuardian>);
			this._tblStaff = default(EntityRef<tblStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(30)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="VarChar(255)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeLevel", DbType="VarChar(60)")]
		public string GradeLevel
		{
			get
			{
				return this._GradeLevel;
			}
			set
			{
				if ((this._GradeLevel != value))
				{
					this.OnGradeLevelChanging(value);
					this.SendPropertyChanging();
					this._GradeLevel = value;
					this.SendPropertyChanged("GradeLevel");
					this.OnGradeLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="Date")]
		public System.Nullable<System.DateTime> JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianID", DbType="Int")]
		public System.Nullable<int> GuardianID
		{
			get
			{
				return this._GuardianID;
			}
			set
			{
				if ((this._GuardianID != value))
				{
					if (this._tblGuardian.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGuardianIDChanging(value);
					this.SendPropertyChanging();
					this._GuardianID = value;
					this.SendPropertyChanged("GuardianID");
					this.OnGuardianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					if (this._tblStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblPayment", Storage="_tblPayments", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<tblPayment> tblPayments
		{
			get
			{
				return this._tblPayments;
			}
			set
			{
				this._tblPayments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblResult", Storage="_tblResults", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<tblResult> tblResults
		{
			get
			{
				return this._tblResults;
			}
			set
			{
				this._tblResults.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudent_tblUser", Storage="_tblUsers", ThisKey="StudentID", OtherKey="StudentID")]
		public EntitySet<tblUser> tblUsers
		{
			get
			{
				return this._tblUsers;
			}
			set
			{
				this._tblUsers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGuardian_tblStudent", Storage="_tblGuardian", ThisKey="GuardianID", OtherKey="GuardianID", IsForeignKey=true)]
		public tblGuardian tblGuardian
		{
			get
			{
				return this._tblGuardian.Entity;
			}
			set
			{
				tblGuardian previousValue = this._tblGuardian.Entity;
				if (((previousValue != value) 
							|| (this._tblGuardian.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGuardian.Entity = null;
						previousValue.tblStudents.Remove(this);
					}
					this._tblGuardian.Entity = value;
					if ((value != null))
					{
						value.tblStudents.Add(this);
						this._GuardianID = value.GuardianID;
					}
					else
					{
						this._GuardianID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblGuardian");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblStudent", Storage="_tblStaff", ThisKey="TeacherID", OtherKey="StaffID", IsForeignKey=true)]
		public tblStaff tblStaff
		{
			get
			{
				return this._tblStaff.Entity;
			}
			set
			{
				tblStaff previousValue = this._tblStaff.Entity;
				if (((previousValue != value) 
							|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaff.Entity = null;
						previousValue.tblStudents.Remove(this);
					}
					this._tblStaff.Entity = value;
					if ((value != null))
					{
						value.tblStudents.Add(this);
						this._TeacherID = value.StaffID;
					}
					else
					{
						this._TeacherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPayments(tblPayment entity)
		{
			this.SendPropertyChanging();
			entity.tblStudent = this;
		}
		
		private void detach_tblPayments(tblPayment entity)
		{
			this.SendPropertyChanging();
			entity.tblStudent = null;
		}
		
		private void attach_tblResults(tblResult entity)
		{
			this.SendPropertyChanging();
			entity.tblStudent = this;
		}
		
		private void detach_tblResults(tblResult entity)
		{
			this.SendPropertyChanging();
			entity.tblStudent = null;
		}
		
		private void attach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblStudent = this;
		}
		
		private void detach_tblUsers(tblUser entity)
		{
			this.SendPropertyChanging();
			entity.tblStudent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStaffArchive")]
	public partial class tblStaffArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDateTime;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _PhysicalAddress;
		
		private string _RoleID;
		
		private string _QualificationID;
		
		private int _StaffArchiveID;
		
		private EntityRef<tblQualification> _tblQualification;
		
		private EntityRef<tblUserRole> _tblUserRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateTimeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhysicalAddressChanging(string value);
    partial void OnPhysicalAddressChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnQualificationIDChanging(string value);
    partial void OnQualificationIDChanged();
    partial void OnStaffArchiveIDChanging(int value);
    partial void OnStaffArchiveIDChanged();
    #endregion
		
		public tblStaffArchive()
		{
			this._tblQualification = default(EntityRef<tblQualification>);
			this._tblUserRole = default(EntityRef<tblUserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="VarChar(128)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDateTime
		{
			get
			{
				return this._DeletedDateTime;
			}
			set
			{
				if ((this._DeletedDateTime != value))
				{
					this.OnDeletedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletedDateTime = value;
					this.SendPropertyChanged("DeletedDateTime");
					this.OnDeletedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(30)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalAddress", DbType="VarChar(128)")]
		public string PhysicalAddress
		{
			get
			{
				return this._PhysicalAddress;
			}
			set
			{
				if ((this._PhysicalAddress != value))
				{
					this.OnPhysicalAddressChanging(value);
					this.SendPropertyChanging();
					this._PhysicalAddress = value;
					this.SendPropertyChanged("PhysicalAddress");
					this.OnPhysicalAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="Char(3)")]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._tblUserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QualificationID", DbType="Char(4)")]
		public string QualificationID
		{
			get
			{
				return this._QualificationID;
			}
			set
			{
				if ((this._QualificationID != value))
				{
					if (this._tblQualification.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQualificationIDChanging(value);
					this.SendPropertyChanging();
					this._QualificationID = value;
					this.SendPropertyChanged("QualificationID");
					this.OnQualificationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffArchiveID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffArchiveID
		{
			get
			{
				return this._StaffArchiveID;
			}
			set
			{
				if ((this._StaffArchiveID != value))
				{
					this.OnStaffArchiveIDChanging(value);
					this.SendPropertyChanging();
					this._StaffArchiveID = value;
					this.SendPropertyChanged("StaffArchiveID");
					this.OnStaffArchiveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblQualification_tblStaffArchive", Storage="_tblQualification", ThisKey="QualificationID", OtherKey="QualificationID", IsForeignKey=true)]
		public tblQualification tblQualification
		{
			get
			{
				return this._tblQualification.Entity;
			}
			set
			{
				tblQualification previousValue = this._tblQualification.Entity;
				if (((previousValue != value) 
							|| (this._tblQualification.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblQualification.Entity = null;
						previousValue.tblStaffArchives.Remove(this);
					}
					this._tblQualification.Entity = value;
					if ((value != null))
					{
						value.tblStaffArchives.Add(this);
						this._QualificationID = value.QualificationID;
					}
					else
					{
						this._QualificationID = default(string);
					}
					this.SendPropertyChanged("tblQualification");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUserRole_tblStaffArchive", Storage="_tblUserRole", ThisKey="RoleID", OtherKey="RoleID", IsForeignKey=true)]
		public tblUserRole tblUserRole
		{
			get
			{
				return this._tblUserRole.Entity;
			}
			set
			{
				tblUserRole previousValue = this._tblUserRole.Entity;
				if (((previousValue != value) 
							|| (this._tblUserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUserRole.Entity = null;
						previousValue.tblStaffArchives.Remove(this);
					}
					this._tblUserRole.Entity = value;
					if ((value != null))
					{
						value.tblStaffArchives.Add(this);
						this._RoleID = value.RoleID;
					}
					else
					{
						this._RoleID = default(string);
					}
					this.SendPropertyChanged("tblUserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudentArchive")]
	public partial class tblStudentArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DeletedBy;
		
		private System.Nullable<System.DateTime> _DeletedDateTime;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private System.DateTime _DateOfBirth;
		
		private string _Gender;
		
		private string _PhoneNumber;
		
		private string _HomeAddress;
		
		private string _GradeLevel;
		
		private System.Nullable<System.DateTime> _JoinDate;
		
		private System.Nullable<int> _GuardianID;
		
		private System.Nullable<int> _TeacherID;
		
		private int _StudentArchiveID;
		
		private EntityRef<tblGuardian> _tblGuardian;
		
		private EntityRef<tblStaff> _tblStaff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeletedByChanging(string value);
    partial void OnDeletedByChanged();
    partial void OnDeletedDateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnDeletedDateTimeChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnHomeAddressChanging(string value);
    partial void OnHomeAddressChanged();
    partial void OnGradeLevelChanging(string value);
    partial void OnGradeLevelChanged();
    partial void OnJoinDateChanging(System.Nullable<System.DateTime> value);
    partial void OnJoinDateChanged();
    partial void OnGuardianIDChanging(System.Nullable<int> value);
    partial void OnGuardianIDChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnStudentArchiveIDChanging(int value);
    partial void OnStudentArchiveIDChanged();
    #endregion
		
		public tblStudentArchive()
		{
			this._tblGuardian = default(EntityRef<tblGuardian>);
			this._tblStaff = default(EntityRef<tblStaff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedBy", DbType="VarChar(128)")]
		public string DeletedBy
		{
			get
			{
				return this._DeletedBy;
			}
			set
			{
				if ((this._DeletedBy != value))
				{
					this.OnDeletedByChanging(value);
					this.SendPropertyChanging();
					this._DeletedBy = value;
					this.SendPropertyChanged("DeletedBy");
					this.OnDeletedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeletedDateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> DeletedDateTime
		{
			get
			{
				return this._DeletedDateTime;
			}
			set
			{
				if ((this._DeletedDateTime != value))
				{
					this.OnDeletedDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DeletedDateTime = value;
					this.SendPropertyChanged("DeletedDateTime");
					this.OnDeletedDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(128)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="Date NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(7) NOT NULL", CanBeNull=false)]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(30)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeAddress", DbType="VarChar(255)")]
		public string HomeAddress
		{
			get
			{
				return this._HomeAddress;
			}
			set
			{
				if ((this._HomeAddress != value))
				{
					this.OnHomeAddressChanging(value);
					this.SendPropertyChanging();
					this._HomeAddress = value;
					this.SendPropertyChanged("HomeAddress");
					this.OnHomeAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GradeLevel", DbType="VarChar(60)")]
		public string GradeLevel
		{
			get
			{
				return this._GradeLevel;
			}
			set
			{
				if ((this._GradeLevel != value))
				{
					this.OnGradeLevelChanging(value);
					this.SendPropertyChanging();
					this._GradeLevel = value;
					this.SendPropertyChanged("GradeLevel");
					this.OnGradeLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JoinDate", DbType="Date")]
		public System.Nullable<System.DateTime> JoinDate
		{
			get
			{
				return this._JoinDate;
			}
			set
			{
				if ((this._JoinDate != value))
				{
					this.OnJoinDateChanging(value);
					this.SendPropertyChanging();
					this._JoinDate = value;
					this.SendPropertyChanged("JoinDate");
					this.OnJoinDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuardianID", DbType="Int")]
		public System.Nullable<int> GuardianID
		{
			get
			{
				return this._GuardianID;
			}
			set
			{
				if ((this._GuardianID != value))
				{
					if (this._tblGuardian.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGuardianIDChanging(value);
					this.SendPropertyChanging();
					this._GuardianID = value;
					this.SendPropertyChanged("GuardianID");
					this.OnGuardianIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					if (this._tblStaff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentArchiveID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentArchiveID
		{
			get
			{
				return this._StudentArchiveID;
			}
			set
			{
				if ((this._StudentArchiveID != value))
				{
					this.OnStudentArchiveIDChanging(value);
					this.SendPropertyChanging();
					this._StudentArchiveID = value;
					this.SendPropertyChanged("StudentArchiveID");
					this.OnStudentArchiveIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGuardian_tblStudentArchive", Storage="_tblGuardian", ThisKey="GuardianID", OtherKey="GuardianID", IsForeignKey=true)]
		public tblGuardian tblGuardian
		{
			get
			{
				return this._tblGuardian.Entity;
			}
			set
			{
				tblGuardian previousValue = this._tblGuardian.Entity;
				if (((previousValue != value) 
							|| (this._tblGuardian.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGuardian.Entity = null;
						previousValue.tblStudentArchives.Remove(this);
					}
					this._tblGuardian.Entity = value;
					if ((value != null))
					{
						value.tblStudentArchives.Add(this);
						this._GuardianID = value.GuardianID;
					}
					else
					{
						this._GuardianID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblGuardian");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaff_tblStudentArchive", Storage="_tblStaff", ThisKey="TeacherID", OtherKey="StaffID", IsForeignKey=true)]
		public tblStaff tblStaff
		{
			get
			{
				return this._tblStaff.Entity;
			}
			set
			{
				tblStaff previousValue = this._tblStaff.Entity;
				if (((previousValue != value) 
							|| (this._tblStaff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaff.Entity = null;
						previousValue.tblStudentArchives.Remove(this);
					}
					this._tblStaff.Entity = value;
					if ((value != null))
					{
						value.tblStudentArchives.Add(this);
						this._TeacherID = value.StaffID;
					}
					else
					{
						this._TeacherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStaff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
